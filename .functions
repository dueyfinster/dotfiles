# Normalize `open` across Linux, macOS, and Windows.
# This is needed to make the `o` function (see below) cross-platform.
if [ ! $(uname -s) = 'Darwin' ]; then
	if grep -q Microsoft /proc/version; then
		# Ubuntu on Windows using the Linux subsystem
		alias open='explorer.exe';
	else
		alias open='xdg-open';
	fi
fi

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}

# SSH Tunnel {{{
tunnel(){
  ssh home -L "$1":localhost:"$1"
}

rtunnel(){
    ssh -R 80:localhost:"$1" serveo.net
}

ssh() {
    if [ "$(ps -p $(ps -p $$ -o ppid=) -o comm=)" = "tmux" ]; then
        tmux rename-window "$(echo $* | cut -d . -f 1)"
        command ssh "$@"
        tmux set-window-option automatic-rename "on" 1>/dev/null
    else
        command ssh "$@"
    fi
}
# }}}

# Docker commands {{{
dshell(){
 docker exec -i -t $1 /bin/bash
}

function d(){
  docker "$@"
}

function dc(){
  docker-compose "$@"
}
# }}}

ldf(){ # Get Last downloaded file
  local file=~/Downloads/$(ls -lt ~/Downloads/ | head -n1)
  read -p "confirm: $file "
  mv "$file" .
}

ytdl() {
  TOKEN=$(cat "$HOME"/.hook)
  curl -X POST --data "token=$TOKEN" --data "url=$1" https://hook.ballyda.com/hooks/yt-dl
}


# Create a data URL from a file
function dataurl() {
	local mimeType=$(file -b --mime-type "$1");
	if [[ $mimeType == text/* ]]; then
		mimeType="${mimeType};charset=utf-8";
	fi
	echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

function_exists() {
    declare -f -F $1 > /dev/null
    return $?
}


copy_rpms(){
  find . -name '*.rpm' -exec cp {} $1 \;
}