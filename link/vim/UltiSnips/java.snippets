################
# Main / Class #
################
snippet class
class ${1:`!p snip.rv = snip.basename or "Untitled"`} {
    ${0}
}
endsnippet

snippet main
public static void main(String[] args){
    ${0}
}
endsnippet

###########
# Methods #
###########
snippet m  "method" b
${1:private} ${2:void} ${3:method}($4) {
	$0
}
endsnippet

snippet re
return ${0};
endsnippet

#############
# If / Else #
#############
snippet if "if" b
if ($!)`!p nl(snip)`{
    $0${VISUAL}
}
endsnippet

######################
# For / While / With #
######################
snippet fore "for (each)" b
for ($1 : $2)`!p nl(snip)`{
	$0
}
endsnippet

snippet fori "for" b
for (int ${1:i} = 0; $1 < ${2:10}; $1++)`!p nl(snip)`{
	$0
}
endsnippet

snippet for "for" b
for ($1; $2; $3)`!p nl(snip)`{
	$0
}
endsnippet

snippet while "while" b
while ($1)`!p nl(snip)`{
	$0
}
endsnippet

snippet sw "switch" b
switch ($1)`!p nl(snip)`{
	case $2: $0
}
endsnippet


##########
# Print	 #
##########
snippet print
System.out.println("${0}");
endsnippet

################
# Try / Except #
################
snippet try "try/catch" b
try {
	$1${VISUAL}
} catch(${2:Exception} ${3:e}){
	${4:e.printStackTrace();}
}
endsnippet

# vim:ft=snippets:
